import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# read all data to one dataframe
def check_data_length():
    for video in range(1, 5):
        file_path = f"../point_cloud_data/6DoF-HMD-UserNavigationData-master/NavigationData/H{video}_nav.csv"
        data = pd.read_csv(file_path)
        if video == 1:
            all_data = data
        else:
            all_data = pd.concat([all_data, data], axis=0)
    print(len(all_data)/30)

def plot_neighbor_6or26():
    MSE_G1 = [0.002756791654974222, 0.0031334576196968555, 0.0033957224804908037, 0.0038000796921551228, 0.004178802017122507, 0.00459236791357398, 0.0048831552267074585, 0.0052232625894248486, 0.0055979457683861256, 0.005836393218487501, 0.006160767748951912, 0.006479048170149326, 0.0067404466681182384, 0.007065732032060623, 0.007216151803731918, 0.007450989913195372, 0.007717170752584934, 0.008021224290132523, 0.008238171227276325, 0.008468342944979668, 0.008653176948428154, 0.008837430737912655, 0.009112689644098282, 0.009296661242842674, 0.009498138912022114, 0.009715464897453785, 0.009896114468574524, 0.010064588859677315, 0.010165512561798096, 0.010351190343499184, 0.010559680871665478, 0.010730696842074394, 0.010841789655387402, 0.010965628549456596, 0.011131730861961842, 0.011248918250203133, 0.011409986764192581, 0.01147595513612032, 0.011648379266262054, 0.011753849685192108, 0.011905296705663204, 0.012034433893859386, 0.012116204015910625, 0.012235693633556366, 0.01230714377015829, 0.012438008561730385, 0.012545366771519184, 0.012595489621162415, 0.01268916018307209, 0.012747599743306637, 0.012893631123006344, 0.012918147258460522, 0.012972278520464897, 0.013009677641093731, 0.013100746087729931, 0.01313843484967947, 0.013229772448539734, 0.01333438977599144, 0.013367878273129463, 0.013355729170143604]
    MSE_G1_full = [0.001786818029358983, 0.002273403573781252, 0.002730956766754389, 0.003161907894536853, 0.0035400032065808773, 0.003952395636588335, 0.004292439669370651, 0.004701206460595131, 0.005014939233660698, 0.005345167126506567, 0.005612711887806654, 0.00593501515686512, 0.006216561421751976, 0.0064219096675515175, 0.006684798747301102, 0.006950632203370333, 0.007159413769841194, 0.007432576734572649, 0.007657869253307581, 0.007892397232353687, 0.008130784146487713, 0.008301796391606331, 0.008502484299242496, 0.008683232590556145, 0.008889332413673401, 0.009056121110916138, 0.009172353893518448, 0.009307218715548515, 0.009499354287981987, 0.009679474867880344, 0.009792475029826164, 0.009930280037224293, 0.009998598136007786, 0.010144926607608795, 0.010277556255459785, 0.010390061885118484, 0.010484798811376095, 0.010612512938678265, 0.010678622871637344, 0.010811656713485718, 0.01088424026966095, 0.010964720509946346, 0.01100864727050066, 0.011109180748462677, 0.011169467121362686, 0.011236517690122128, 0.011316752061247826, 0.011404692195355892, 0.011494225822389126, 0.011488335207104683, 0.011586954817175865, 0.011665115132927895, 0.011624094098806381, 0.011655456386506557, 0.011692844331264496, 0.01169782318174839, 0.011746049858629704, 0.01178721897304058, 0.011790527030825615, 0.011783828027546406]
    # plot 
    # pick 1, 10, 30 and 60 frames and plot with dot and dash line
    # plot MSE_G1 and MSE_G1_full
    MSE_G1_new = [MSE_G1[0], MSE_G1[9], MSE_G1[29], MSE_G1[59]]
    MSE_G1_full_new = [MSE_G1_full[0], MSE_G1_full[9], MSE_G1_full[29], MSE_G1_full[59]]
    # x axis is 1, 10, 30, 60
    plt.figure()
    x = [1, 10, 30, 60]
    plt.plot(x,MSE_G1_new, label='6 side neighbors', linestyle='--', marker='o')
    plt.plot(x,MSE_G1_full_new, label='All 26 neighbors', linestyle='--', marker='o')
    plt.legend()
    plt.xlabel('Prediction Horizon/frame')
    plt.ylabel('MSE Loss')
    plt.show()

if __name__ == "__main__":
    # check_data_length()
    plot_neighbor_6or26()
  